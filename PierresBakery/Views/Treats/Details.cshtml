@{
  Layout = "_Layout";
}
@model PierresBakery.Models.Treat;

<h2>Treat Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>

@if(@Model.JoinEntities.Count == 0)
{
  <p>This treat hasn't been assigned any flavors yet!</p>
  <p>Click the button bellow get started.</p>
}
else
{
  <h4>Associated Flavors</h4>
  <br>
  <div class="row justify-content-center">
    @foreach(var join in Model.JoinEntities)
    {   
      <div class="col-2 mx-2">
        <span>@join.Flavor.Name</span>
        @using (Html.BeginForm("DeleteFlavor", "Treats")) 
        {
          <button type="submit" class="btn btn-warning btn-sm" value="Delete">
          Delete
          </button>
          @Html.Hidden("joinId", @join.FlavorTreatId)
          @Html.Hidden("treatId", @join.TreatId)
        }
      </div>
    }
  </div>
}
<hr />
@Html.ActionLink("Home", "Index", "Home", new { }, new { @class = "btn btn-outline-primary"})
@Html.ActionLink("Edit Treat", "Edit", new { id = Model.TreatId }, new { @class = "btn btn-outline-primary"})
@Html.ActionLink("Delete Treat", "Delete", new { id = Model.TreatId }, new { @class = "btn btn-outline-primary"})
@Html.ActionLink("Add a Flavor", "AddFlavor", new { id = Model.TreatId }, new { @class = "btn btn-outline-primary"})
